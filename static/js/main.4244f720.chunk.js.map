{"version":3,"sources":["store/actions/actionTypes.js","store/actions/burgerBuilder.js","store/actions/order.js","store/actions/auth.js","hoc/Auxillary.js","axios-orders.js","components/UI/Button/Button.js","components/UI/Spiner/Spinner.js","components/Burger/BurgerIngredient/BurgerIngredient.module.css","hoc/withErrorHandler.js","components/Navigation/Sidedrawer/Sidedrawer.module.css","components/UI/Input/Input.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","components/UI/Input/Input.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Navigation/Toolbar/Toolbar.module.css","containers/Auth/Logout/Logout.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/Burger.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","components/Order/CkeckoutSummery/CheckoutSummery.module.css","components/Order/Order.module.css","containers/Auth/auth.js","containers/Auth/auth.module.css","components/Layout/Layout.module.css","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/Toolbar/ToggleDrawer/ToggleDrawer.module.css","components/UI/Backdrop/Backdrop.module.css","components/UI/Modal/Modal.module.css","components/UI/Spiner/Spinner.module.css","containers/Checkout/ContactData/ContactData.module.css","containers/Orders/Orders.module.css","containers/About/About.module.css","components/Order/CkeckoutSummery/CheckoutSummery.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","logo.svg","assets/Images/burger-logo.png","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/Toolbar/ToggleDrawer/ToggleDrawer.js","components/Navigation/Toolbar/Toolbar.js","components/Navigation/Sidedrawer/Sidedrawer.js","components/Layout/Layout.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/Price/Price.js","components/Burger/BuildControls/BuildControls.js","components/Burger/OrderSummery/OrderSummery.js","containers/BurgerBuilder/BurgerBuilder.js","containers/About/About.js","App.js","reportWebVitals.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","index.js"],"names":["ADD_INGREDIENT","REMOVE_INGREDIENT","INIT_INGREDIENTS","FETCH_INGREDIENTS_FAILD","PURCHASE_BURGER_SUCCESS","PURCHASE_BURGER_FAIL","PURCHASE_BURGER_START","CHECKOUT_START","CHECKOUT_CANCEL","FETCH_ORDERS_START","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAIL","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","LOGOUT","addIngredient","ingName","type","actionTypes","ingredientName","removeIngredient","setIngredients","ings","ingredients","initIngredients","dispatch","axios","get","then","res","data","catch","error","tryPurchaseBurger","orderData","token","post","response","purchaseBurgerSuccess","name","purchaseBurgerFail","id","orderId","checkoutStart","checkoutCancel","tryFetchOrders","userId","queryParams","fetchedOrders","key","push","fetchOrdersSuccess","err","fetchOrdersFail","orders","authSuccess","idToken","logout","localStorage","removeItem","tryAuth","email","password","isSignup","url","authData","returnSecureToken","expiresIn","startPointDate","Date","getTime","setItem","localId","setTimeout","checkAuthLStorage","getItem","aux","props","children","instance","create","baseURL","button","className","classes","Button","btnType","join","onClick","clicked","disabled","spinner","Loader","module","exports","withErrorHandler","WrapedComponent","state","errorConfirmedHandler","setState","interceptors","request","use","req","console","log","message","show","this","showCancel","Component","backdrop","Backdrop","click","Modal","nextProps","nextState","style","transform","opacity","Input","styleClasses","InputElement","validationError","invalid","shouldValidate","touched","Invalid","ValidationError","inputElement","elementType","elementConfig","value","onChange","changed","options","map","option","displayValue","Label","label","burgerIngredient","ingredient","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","burger","IngredientsBuffer","ingredientRepet","Object","values","ingriedents","keys","index","i","BurgerIngredient","length","Empty","Burger","Logout","onLogout","to","connect","actions","Auth","controls","placeholder","validation","required","isEmail","valid","minLength","isSignUp","checkValidity","rules","isValid","trim","maxLength","test","isNumeric","inputChangeHandler","event","controlName","updatetControlform","updatedformElement","target","onSubmitHandler","preventDefault","onAuth","confirmSignup","prevState","confirmSignin","switchAuthMethodHandler","callback","formElementsArray","config","form","formElement","loading","errorMessage","ErrorMessage","authRedirect","isAuthenticated","price","onBeginCheckout","onSubmit","auth","burgerBuilder","totalPrice","checkoutSummery","CheckoutSummery","checkoutCancelled","checkoutContinued","ContactData","orderForm","street","postalCode","country","deliveryMethod","isFormValid","orderHandler","formData","formElementIdentifier","toPurchaseOrder","onOrderBurger","identifier","updatedOrderForm","updatedFormElement","Spinner","order","Checkout","checkoutCancelHandler","onCheckoutCancel","history","goBack","checkoutContinueHandler","replace","summery","checkoutRedirect","path","match","component","amount","ingredientsOutput","ig","Ingredients","Order","Orders","onFetchOrders","toShowOrders","logo","Logo","src","burgerLogo","alt","NavigationItem","Link","activeClassName","active","exact","genau","NavigationItems","isAuth","checkoutBegin","toggleDrawer","ToggleDrawer","toolbar","Toolbar","openSidedrawer","DesktopOnly","isAuthenticate","sidedrawer","showStatus","closeSidedrawer","Sidedrawer","Open","Close","Layout","toggleSidedrawerHandler","content","buildControl","BuildControl","ingredLabel","Less","isDisabled","More","toFixed","buildcontrols","BuildConrols","Price","disabledInfo","OrderButton","hasOrder","ordered","orderSummery","orderedIngredients","textTransform","cancelled","purchased","BurgerBuilder","orderConfirmed","updateHasOrderStatus","sum","ingred","purchasedHandler","purchaseCancelHandler","purchaseContinueHandler","onCheckoutStart","onInitIngredients","loadedBurger","BuildControls","onIngredientAdded","onIngredientRemoved","OrderSummery","About","App","onAuthCheck","gaurdRoute","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","INGREDIENTS_PRICES","salad","cheese","meat","bacon","action","fetchIngredientsFail","reducer","newOrder","concat","authStart","authFail","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","authReducer","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4244f720.chunk.js","sourcesContent":["\r\nexport const ADD_INGREDIENT = 'ADD_INGREDIENT';\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\r\nexport const INIT_INGREDIENTS = 'INIT_INGREDIENTS';\r\nexport const FETCH_INGREDIENTS_FAILD = 'FETCH_INGREDIENTS_FAILD';\r\n\r\n\r\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\r\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\r\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\r\n\r\nexport const CHECKOUT_START = 'CHECKOUT_START';\r\nexport const CHECKOUT_CANCEL = 'CHECKOUT_CANCEL';\r\n\r\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\r\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS ';\r\nexport const FETCH_ORDERS_FAIL  = 'FETCH_ORDERS_FAIL';\r\n\r\nexport const AUTH_START = 'AUTH_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';\r\n\r\nexport const LOGOUT = 'LOGOUT';\r\n","import * as actionTypes from './actionTypes'\r\nimport axios from '../../axios-orders'\r\n\r\nexport const addIngredient = (ingName) => {\r\n    return {\r\n        type : actionTypes.ADD_INGREDIENT,\r\n        ingredientName : ingName\r\n    }\r\n}\r\n\r\nexport const removeIngredient = (ingName) => {\r\n    return {\r\n        type : actionTypes.REMOVE_INGREDIENT,\r\n        ingredientName : ingName\r\n    }\r\n}\r\nexport const setIngredients = (ings) => {\r\n    return {\r\n        type : actionTypes.INIT_INGREDIENTS,\r\n        ingredients : ings\r\n    }\r\n}\r\nexport const fetchIngredientsFaild = () => {\r\n    return {\r\n        type : actionTypes.FETCH_INGREDIENTS_FAILD\r\n    }\r\n}\r\nexport const initIngredients = () => {\r\n   return dispatch => {\r\n        dispatch(setIngredients());\r\n          axios.get('/ingredients.json').then(res => {\r\n            dispatch(setIngredients(res.data));\r\n        }).catch(error => {\r\n            dispatch(fetchIngredientsFaild());\r\n        } )\r\n   }\r\n}","import * as actionTypes from './actionTypes'\r\nimport axios from '../../axios-orders'\r\n\r\n// Start Actions for The BurgerPurchasing \r\n\r\n// This is action to display Loading while Purchasing\r\nexport const purchaseBurgerStart = () => {\r\n    return {\r\n        type : actionTypes.PURCHASE_BURGER_START\r\n    }\r\n}\r\nexport const tryPurchaseBurger = ( orderData, token) => {\r\n    return dispatch => {\r\n        dispatch (purchaseBurgerStart());\r\n        axios.post('/orders.json?auth=' + token, orderData).\r\n        then (response => { \r\n                // logging the Response\r\n                // console.log(response.data);\r\n                dispatch(purchaseBurgerSuccess(response.data.name,orderData))\r\n        })\r\n        .catch(error => { \r\n                dispatch(purchaseBurgerFail(error))\r\n        })\r\n    }\r\n}\r\nexport const purchaseBurgerSuccess = (id,orderData) => {\r\n    return {\r\n        type : actionTypes.PURCHASE_BURGER_SUCCESS,\r\n        orderId : id,\r\n        orderData :orderData \r\n    }\r\n}\r\n\r\nexport const purchaseBurgerFail = (error) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_FAIL,\r\n        error : error\r\n    }\r\n}\r\n// Actoin for Storing the Status of Checkoutstart, That helps by Redirecting to Home Page after PurchaseSuccess\r\nexport const checkoutStart = () => {\r\n    return {\r\n        type : actionTypes.CHECKOUT_START\r\n    }\r\n}\r\nexport const checkoutCancel = () => {\r\n    return {\r\n        type : actionTypes.CHECKOUT_CANCEL\r\n    }\r\n}\r\n\r\n// End Actions for The BurgerPurchasing\r\n\r\n\r\n// Start Actions for Fetching Orders \r\n\r\nexport const fetchOrdersStart = () => {\r\n    return {\r\n        type : actionTypes.FETCH_ORDERS_START\r\n    }\r\n}\r\nexport const tryFetchOrders = (token, userId) => {\r\n    return dispatch => {\r\n        // Tell The UI we started to Fetch The Orders\r\n        dispatch (fetchOrdersStart())\r\n        const queryParams = '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + userId +'\"'\r\n        axios.get ('/orders.json' + queryParams)\r\n        .then (res => {\r\n            const fetchedOrders = [];\r\n            for (let key in res.data) {\r\n                fetchedOrders.push({\r\n                    ...res.data[key],\r\n                    id : key\r\n                })\r\n            }\r\n            dispatch(fetchOrdersSuccess(fetchedOrders));\r\n\r\n        })\r\n        .catch (err => {\r\n            \r\n            dispatch(fetchOrdersFail(err))\r\n        })\r\n    }\r\n\r\n}\r\nexport const fetchOrdersSuccess = (fetchedOrders) => {\r\n    return {\r\n        type : actionTypes.FETCH_ORDERS_SUCCESS,\r\n        orders : fetchedOrders\r\n    }\r\n}\r\n\r\nexport const fetchOrdersFail = (error) => {\r\n    return {\r\n        type : actionTypes.FETCH_ORDERS_FAIL,\r\n        error : error\r\n    }\r\n}\r\n\r\n// End Actions for Fetching Orders \r\n\r\n","import { ReactReduxContext } from 'react-redux'\r\nimport * as actionTypes from './actionTypes'\r\nimport axios from 'axios'\r\nimport Logout from '../../containers/Auth/Logout/Logout'\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type : actionTypes.AUTH_START\r\n    }\r\n}\r\n\r\nexport const authSuccess = (idToken, userId) => {\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        idToken : idToken,\r\n        userId : userId\r\n    }\r\n}\r\n\r\nexport const authFail = (error) => {\r\n    return {\r\n        type: actionTypes.AUTH_FAIL,\r\n        error : error\r\n    }\r\n}\r\n// To logout\r\nexport const logout = () => {\r\n    localStorage.removeItem('idToken')\r\n    localStorage.removeItem('userId')\r\n    localStorage.removeItem('expiresIn')\r\n    return {\r\n        type : actionTypes.LOGOUT\r\n    }\r\n}\r\n// To logout after specific Time [expiresIn ]\r\nexport const checkAuthTimeout = (expiresIn) => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(logout())\r\n        },expiresIn * 1000)\r\n    }\r\n}\r\n\r\nexport const tryAuth = (email,password,isSignup) => {\r\n    return dispatch => {\r\n        // Starte Authentication\r\n        dispatch(authStart());\r\n        // console.log(email,'---',password,'----',isSignup)\r\n        let url = null;\r\n        let authData= {\r\n            email: email,\r\n            password : password,\r\n            returnSecureToken: true\r\n        }\r\n        if (isSignup) {\r\n             url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAHWNHINQqusYWEWmSJJlCWFQHE8N-hacQ'\r\n        }\r\n        else {\r\n             url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAHWNHINQqusYWEWmSJJlCWFQHE8N-hacQ'\r\n        }\r\n        // console.log(authData)\r\n        // console.log(url)\r\n        axios.post(url,authData)\r\n        .then(res => {\r\n\r\n            const startPointDate = (new Date()).getTime() + (res.data.expiresIn * 1000)\r\n            localStorage.setItem('idToken',res.data.idToken );\r\n            localStorage.setItem('userId',res.data.localId );\r\n            localStorage.setItem('expiresIn',startPointDate )\r\n\r\n            dispatch(checkAuthTimeout(+res.data.expiresIn))\r\n            dispatch(authSuccess(res.data.idToken,res.data.localId))\r\n        })\r\n        .catch(err => {\r\n            dispatch(authFail(err.response.data.error));\r\n        })\r\n    }\r\n}\r\n\r\nexport const checkAuthLStorage = () => {\r\n    return dispatch => {\r\n            const startPointDate = localStorage.getItem('expiresIn');\r\n\r\n            const actualDate = (new Date()).getTime();\r\n\r\n            if (actualDate < startPointDate) {\r\n            \r\n                dispatch (authSuccess(localStorage.getItem('idToken'),localStorage.getItem('userId')))\r\n            }\r\n            else {\r\n                dispatch(logout())\r\n            }\r\n   \r\n    }\r\n\r\n}","\r\nconst aux = (props) => props.children;\r\nexport default aux;","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    baseURL : 'https://react-my-burger-59bde-default-rtdb.europe-west1.firebasedatabase.app/'\r\n})\r\nexport default instance;","import React from 'react';\r\nimport classes from './Button.module.css';\r\n\r\nconst button = (props) => {\r\n     \r\n    return (\r\n        <button className = {[classes.Button,classes[props.btnType]].join(' ')}\r\n                 onClick = {props.clicked}\r\n                 disabled = {props.disabled} >\r\n            {props.children}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default button;","import React from 'react'\r\nimport classes from './Spinner.module.css'\r\n\r\nconst spinner = () => {\r\n    return (\r\n        <div className = {classes.Loader}>Loading...</div>\r\n    )\r\n}\r\n\r\nexport default spinner;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__20cUA\",\"BreadTop\":\"BurgerIngredient_BreadTop__3cHp1\",\"Seeds1\":\"BurgerIngredient_Seeds1__382Ew\",\"Seeds2\":\"BurgerIngredient_Seeds2__3w3xp\",\"Meat\":\"BurgerIngredient_Meat__1f4U9\",\"Cheese\":\"BurgerIngredient_Cheese__3mtjL\",\"Salad\":\"BurgerIngredient_Salad__vkiPs\",\"Bacon\":\"BurgerIngredient_Bacon__3uoV5\"};","import React,{Component} from 'react'\r\nimport Aux from '../hoc/Auxillary'\r\nimport Modal from '../components/UI/Modal/Modal'\r\n\r\n\r\nconst withErrorHandler = (WrapedComponent, axios) => {\r\nreturn class extends Component  {\r\n    state = {\r\n        error : null\r\n    }\r\n\r\n    errorConfirmedHandler= () => {\r\n        this.setState({error:null})\r\n    }\r\n    render () {\r\n\r\n        axios.interceptors.request.use(req => {\r\n            this.setState({error:null})\r\n            return req\r\n        })\r\n        axios.interceptors.response.use(res =>res, error => {\r\n            this.setState({error : error})\r\n            console.log('Hiiiiiiiii',error.message)\r\n        });\r\n    \r\n        return (\r\n            <Aux>\r\n                  <Modal show = {this.state.error}\r\n                        showCancel = {this.errorConfirmedHandler}    >\r\n                     {this.state.error ? this.state.error.message : null}\r\n                  </Modal>\r\n                  <WrapedComponent {...this.props}/>\r\n            </Aux>\r\n           \r\n        )\r\n        }\r\n    }\r\n}\r\n\r\nexport default withErrorHandler;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Sidedrawer\":\"Sidedrawer_Sidedrawer__3bJZK\",\"Open\":\"Sidedrawer_Open__2dB8K\",\"Close\":\"Sidedrawer_Close__1sFv0\",\"Logo\":\"Sidedrawer_Logo__3n8Mh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__14T5G\",\"Label\":\"Input_Label__1uCkF\",\"InputElement\":\"Input_InputElement__32QFW\",\"Invalid\":\"Input_Invalid__1GikQ\",\"ValidationError\":\"Input_ValidationError__2Kba2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__2vN-B\",\"Label\":\"BuildControl_Label__3tlD5\",\"Less\":\"BuildControl_Less__3Ui4c\",\"More\":\"BuildControl_More__599qg\"};","import React from 'react';\r\nimport classes from './Backdrop.module.css'\r\n\r\nconst backdrop = (props) => {\r\n\r\n    return ( (props.show) ?\r\n        <div className = {classes.Backdrop}\r\n             onClick = {props.click}      \r\n        >\r\n\r\n        </div> : null\r\n    )\r\n}\r\n\r\nexport default backdrop;","import React,{Component} from 'react';\r\nimport classes from './Modal.module.css'\r\nimport Aux from '../../../hoc/Auxillary';\r\nimport Backdrop from '../Backdrop/Backdrop'\r\n\r\nclass Modal extends Component {\r\n \r\n  // we have improved the performance,we render the ModalComponent just wen want to show it\r\n  shouldComponentUpdate (nextProps, nextState) {\r\n    return (nextProps.show !== this.props.show || nextProps.children !== this.props.children)\r\n  }\r\n\r\n  componentDidUpdate () {\r\n    \r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <Aux>\r\n        <Backdrop show = {this.props.show}  \r\n                  click = {this.props.showCancel}\r\n        />\r\n        <div className = {classes.Modal }\r\n             style = {{\r\n               transform : this.props.show? 'translateY(0)' : 'translateY(-100vh)',\r\n               opacity : this.props.show ? '1' :'0'\r\n            }}\r\n       >\r\n         \r\n        {this.props.children}\r\n      </div>\r\n      </Aux>\r\n     \r\n  );\r\n\r\n  }\r\n    \r\n\r\n}\r\n\r\nexport default Modal;","import React from 'react'\r\nimport classes from './Input.module.css'\r\nconst Input = (props) => {\r\n   const styleClasses = [classes.InputElement]\r\n   let validationError = null;\r\n   //Checking The valida\r\n   if(props.invalid && props.shouldValidate && props.touched) {\r\n     styleClasses.push(classes.Invalid);\r\n     validationError = <p className = {classes.ValidationError}>Please enter a valid value!</p>;\r\n   }\r\n    \r\n   let inputElement = null\r\n    switch (props.elementType) {\r\n        case ('input') :\r\n            inputElement = <input  className = {styleClasses.join(' ')} \r\n                                  {...props.elementConfig}\r\n                                  value = {props.value}\r\n                                  onChange = {props.changed}/>\r\n            break;\r\n        case ('textarea') :\r\n            inputElement = <textarea className = {styleClasses.join(' ')}\r\n                                     {...props.elementConfig}\r\n                                     value = {props.value}\r\n                                     onChange = {props.changed}/>\r\n            break;\r\n        case ('select') :\r\n            inputElement = <select className = {styleClasses.join(' ')}\r\n                                        {...props.elementConfig}\r\n                                        value = {props.value}\r\n                                        onChange = {props.changed}>\r\n                                             {props.elementConfig.options.map(option => {\r\n                                                return <option key = {option.value} value = {option.value}>\r\n                                                         {option.displayValue}\r\n                                                      </option>\r\n                                            })}\r\n                                        </select>\r\n\r\n            break;\r\n        default :\r\n        inputElement = <input className = {styleClasses.join(' ')}\r\n                             {...props.elementConfig}\r\n                             value = {props.value}\r\n                             onChange = {props.changed} />\r\n    }\r\n\r\n    return (\r\n        <div className = {classes.Input}>\r\n            <label className = {classes.Label}>{props.label}</label>\r\n            {inputElement}\r\n            {validationError}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input ;","import classes from './BurgerIngredient.module.css';\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst burgerIngredient = (props) => {\r\nlet ingredient = null;\r\n    switch (props.type) {\r\n        case ( 'bread-bottom' ):\r\n            ingredient = <div className={classes.BreadBottom}></div>;\r\n            break;\r\n        case ( 'bread-top' ):\r\n            ingredient = (\r\n                <div className={classes.BreadTop}>\r\n                    <div className={classes.Seeds1}></div>\r\n                    <div className={classes.Seeds2}></div>\r\n                </div>\r\n            );\r\n            break;\r\n        case 'meat' :\r\n                ingredient = <div className = {classes.Meat }>  </div>\r\n                break; \r\n        case 'cheese' :\r\n                ingredient = <div className = {classes.Cheese }></div>\r\n                break;\r\n        case 'salad' :\r\n                ingredient = <div className = {classes.Salad }>  </div>\r\n                break;\r\n        case 'bacon' :\r\n                ingredient = <div className = {classes.Bacon }></div>\r\n                break;\r\n        default :\r\n        ingredient = <div> Es gipt ein problem bei  yourSwitch</div>\r\n        \r\n        }\r\n        burgerIngredient.propTypes = {\r\n            type : PropTypes.string.isRequired\r\n        }\r\n    \r\n    return ingredient;    \r\n\r\n        \r\n}\r\n\r\nexport default burgerIngredient;","import React from 'react';\r\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient'\r\nimport classes from './Burger.module.css';\r\n\r\nconst burger = (props) => {\r\n    let IngredientsBuffer = [];\r\n    let ingredientRepet = Object.values(props.ingriedents);\r\n    let ingredientsArray = Object.keys(props.ingriedents)\r\n       \r\n    ingredientsArray.map((ingredient,index) =>{\r\n        for (let i = 0; i < ingredientRepet[index];i++) {\r\n            IngredientsBuffer.push(<BurgerIngredient key = {ingredient + i} type = {ingredient} />) \r\n        }\r\n        return null;\r\n\r\n    });\r\n    if (IngredientsBuffer.length ===0 ) {\r\n        IngredientsBuffer.push(<p key = {1} className = {classes.Empty}>Please start adding elements</p>);\r\n    }\r\n    \r\n    \r\n    return (\r\n        <div className = {classes.Burger} >\r\n             <BurgerIngredient type = 'bread-top' />\r\n            {IngredientsBuffer}\r\n              <BurgerIngredient type = 'bread-bottom' />\r\n        </div>\r\n      \r\n    );\r\n\r\n}\r\n\r\nexport default burger;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__3JSTn\",\"Logo\":\"Toolbar_Logo__3xJjU\",\"MobileOnly\":\"Toolbar_MobileOnly__1rf5o\",\"DesktopOnly\":\"Toolbar_DesktopOnly__3WtDd\"};","import React, {Component} from 'react'\r\nimport actionTypes from '../../../store/actions/actionTypes';\r\nimport * as actions from '../../../store/actions/index'\r\nimport {connect} from 'react-redux'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nclass Logout extends Component {\r\n\r\n    componentDidMount () {\r\n        this.props.onLogout()\r\n    }\r\n    render () {\r\n        return <Redirect to = \"/\"/>\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onLogout : () => dispatch ( actions.logout())\r\n    }\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps ) (Logout);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__286K2\",\"active\":\"NavigationItem_active__2w1cM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Empty\":\"Burger_Empty__3qreq\",\"Burger\":\"Burger_Burger__H0x0C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildConrols\":\"BuildControls_BuildConrols__1uhOh\",\"OrderButton\":\"BuildControls_OrderButton__3S5Ml\",\"enable\":\"BuildControls_enable__1atp8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__16_1X\",\"Success\":\"Button_Success__IkJg-\",\"Danger\":\"Button_Danger__3Et4l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummery\":\"CheckoutSummery_CheckoutSummery__3JFuf\",\"Burger\":\"CheckoutSummery_Burger__2MtsY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__1YfkG\",\"Ingredients\":\"Order_Ingredients__3jTFK\"};","import classes from './auth.module.css'\r\nimport React, {Component} from 'react'\r\nimport Input from '../../components/UI/Input/Input'\r\nimport Button from '../../components/UI/Button/Button'\r\nimport * as actions from '../../store/actions/index'\r\nimport { connect, Connect } from 'react-redux';\r\nimport Spinner from '../../components/UI/Spiner/Spinner'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\n\r\nclass Auth extends Component {\r\n    state = {\r\n        controls:{\r\n            email:{\r\n                elementType : 'input',\r\n                elementConfig : {\r\n                    type: 'email',\r\n                    placeholder : 'Mail Address'\r\n                },\r\n                value : '',\r\n                validation : {\r\n                    required : true,\r\n                    isEmail:true\r\n                },\r\n                valid : false,\r\n                touched : false\r\n            },\r\n            password:{\r\n                elementType : 'input',\r\n                elementConfig : {\r\n                    type: 'password',\r\n                    placeholder : 'Password'\r\n                },\r\n                value : '',\r\n                validation : {\r\n                    required : true,\r\n                    minLength: 7\r\n                },\r\n                valid : false,\r\n                touched : false\r\n            }\r\n        },\r\n        isSignUp: null\r\n    }\r\n    componentWillUnmount() {\r\n        // fix Warning: Can't perform a React state update on an unmounted component\r\n        this.setState = (state,callback)=>{\r\n            return;\r\n        };\r\n    }\r\n\r\n    // Check if The form values match to The Rules on Form\r\n    checkValidity = (value,rules) => {\r\n        let isValid = false\r\n    \r\n        // rules is null by selection\r\n        if (! rules)\r\n          return true\r\n        if (rules.required) {\r\n            isValid = value.trim() !== '';\r\n        }\r\n        if (rules.maxLength){\r\n            isValid = (value.trim().length <= rules.maxLength) && isValid\r\n        }\r\n        if (rules.minLength) {\r\n            isValid = (value.trim().length >= rules.minLength) && isValid\r\n        }\r\n        if(rules.isEmail) {\r\n            const patter = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n            isValid = patter.test(value) && isValid;\r\n        }\r\n        if(rules.isNumeric) {\r\n            const pattern = /^\\d+$/;\r\n            isValid = pattern.test(value) && isValid;\r\n        }\r\n             \r\n            return isValid;\r\n    }\r\n\r\n    // Function to handle the inputValue of The FormInputElement and store the result in the State\r\n    inputChangeHandler = (event,controlName ) => {\r\n        let updatetControlform = {\r\n            ...this.state.controls\r\n        }\r\n        let updatedformElement = {\r\n            ...updatetControlform[controlName]\r\n        }\r\n        updatedformElement.value = event.target.value;\r\n        \r\n        updatedformElement.valid = this.checkValidity( updatedformElement.value,updatedformElement.validation);\r\n\r\n         // true wehn we write something     \r\n         updatedformElement.touched = true;\r\n         //Check the validation for the Form complete \r\n         updatetControlform[controlName] = updatedformElement;\r\n\r\n         this.setState({controls : updatetControlform})\r\n\r\n    }\r\n    // Apply on Submitting The Form\r\n    onSubmitHandler = (event) => {\r\n        event.preventDefault()\r\n        this.props.onAuth(this.state.controls.email.value,this.state.controls.password.value,this.state.isSignUp)\r\n    }\r\n    confirmSignup = () => {\r\n        this.setState(prevState =>  { return {isSignUp : true}})\r\n    }\r\n    confirmSignin = () => {\r\n        this.setState(prevState =>  { return {isSignUp : false}})\r\n    }\r\n    switchAuthMethodHandler = () => {\r\n        this.setState(prevState => {\r\n            return {isSignUp: !prevState.isSignUp}\r\n        })\r\n    }\r\n\r\n    // Start Ckeckout after Successfully login\r\n    goToCheckout () {\r\n\r\n    }\r\n\r\n    render () {\r\n\r\n        let formElementsArray = []\r\n        for (let key in this.state.controls) {\r\n            formElementsArray.push({\r\n                config : this.state.controls[key],\r\n                id : key\r\n            });\r\n        }\r\n        // Create The Form InputElements\r\n        let form = (\r\n            <div>\r\n                {\r\n                   formElementsArray.map(formElement => {\r\n                         return  <Input key = {formElement.id}\r\n                                        elementType = {formElement.config.elementType}\r\n                                        elementConfig = {formElement.config.elementConfig}\r\n                                        value = {formElement.config.value}\r\n                                        changed = {(event) => this.inputChangeHandler(event,formElement.id)}\r\n                                        invalid = { !formElement.config.valid}\r\n                                        shouldValidate = {formElement.config.validation}\r\n                                        touched = {formElement.config.touched}/>\r\n                        }) \r\n                }\r\n            </div>\r\n        );\r\n        // Displaying The Spinner While Loading\r\n        if (this.props.loading) {\r\n            form = <Spinner/>\r\n        }\r\n        // Displaying ErrorMessage when a Error hapens\r\n        let errorMessage = null;\r\n        if (this.props.error) {\r\n            errorMessage = <p className = {classes.ErrorMessage} >{this.props.error.message}</p>\r\n        }\r\n        // Redirecting  after successfully Logging-in [BurgerBuilder -> Authentication -> Checkout || Authentication -> BurgerBuilder]\r\n        let authRedirect = null\r\n        if (this.props.isAuthenticated) {\r\n            if(this.props.price > 4) {\r\n                this.props.onBeginCheckout();\r\n                authRedirect = <Redirect to = \"/checkout\" />\r\n            }\r\n            else {\r\n                authRedirect = <Redirect to = \"/\" />\r\n            }\r\n        }\r\n\r\n        return (\r\n         \r\n            <div className = {classes.Auth}>\r\n                   {authRedirect}\r\n                {errorMessage}\r\n                <form onSubmit = { this.onSubmitHandler}>\r\n                    {form}\r\n                    <Button btnType = 'Success'>{this.state.isSignUp ? 'Sign-up' : 'Sign-in' }</Button>\r\n                </form>\r\n                <Button btnType = 'Danger'\r\n                             clicked = {this.switchAuthMethodHandler} >SWITCH TO {this.state.isSignUp ? 'SIGN-IN' : 'SIGN-UP' }</Button>\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading : state.auth.loading,\r\n        error : state.auth.error,\r\n        isAuthenticated : state.auth.idToken !== null,\r\n        price : state.burgerBuilder.totalPrice\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAuth : (email,password,isSignup) => dispatch(actions.tryAuth(email,password,isSignup)),\r\n        onBeginCheckout: () => dispatch (actions.checkoutStart())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps) (Auth);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"auth_Auth__24ziT\",\"ErrorMessage\":\"auth_ErrorMessage__2hZ6h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Layout_content__O01TY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__NQKRZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__2c5_6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ToggleDrawer\":\"ToggleDrawer_ToggleDrawer__1Lj7j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__2qOnp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__6h2qf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__b1M5Y\",\"load2\":\"Spinner_load2__yaV2X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__26_UL\",\"Input\":\"ContactData_Input__3lL8I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Orders\":\"Orders_Orders__21tR6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"About\":\"About_About__rL_p4\"};","import classes from './CheckoutSummery.module.css'\r\nimport React from 'react'\r\nimport Burger from '../../Burger/Burger'\r\nimport Button from '../../UI/Button/Button'\r\n\r\n\r\nconst checkoutSummery = (props) => {\r\n\r\n    return (\r\n        <div className = {classes.CheckoutSummery}>\r\n            <h1>We hope it tasts well !!</h1>\r\n            <div className = {classes.Burger}>\r\n                <Burger ingriedents = {props.ingriedents}/>\r\n            </div>\r\n            <div>\r\n                <Button\r\n                    btnType = 'Danger'\r\n                    clicked = {props.checkoutCancelled}>CANCEL</Button>\r\n                <Button\r\n                    btnType = 'Success'\r\n                    clicked = {props.checkoutContinued}>COUNTINUE</Button>\r\n            </div>\r\n           \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default checkoutSummery;","import classes from './ContactData.module.css'\r\nimport React,{Component} from 'react'\r\nimport Button from '../../../components/UI/Button/Button'\r\nimport axios from '../../../axios-orders'\r\nimport Spinner from '../../../components/UI/Spiner/Spinner'\r\nimport {withRouter} from 'react-router-dom'\r\nimport Input from '../../../components/UI/Input/Input'\r\nimport {connect} from 'react-redux'\r\nimport withErrorHandler from '../../../hoc/withErrorHandler'\r\nimport * as actions from '../../../store/actions/index'\r\n\r\nclass ContactData extends Component {\r\n    state = {\r\n        orderForm : {\r\n            name:{\r\n                elementType : 'input',\r\n                elementConfig : {\r\n                    type: 'text',\r\n                    placeholder : 'Your Name'\r\n                },\r\n                value : '',\r\n                validation : {\r\n                    required : true\r\n                },\r\n                valid : false,\r\n                touched : false\r\n            },\r\n            email:{\r\n                elementType : 'input',\r\n                elementConfig : {\r\n                    type: 'text',\r\n                    placeholder : 'Your E-Mail'\r\n                },\r\n                value : '',\r\n                validation : {\r\n                    required : true,\r\n                    isEmail:true\r\n                },\r\n                valid : false,\r\n                touched : false\r\n            },\r\n            street : {\r\n                elementType : 'input',\r\n                elementConfig : {\r\n                    type: 'text',\r\n                    placeholder : 'Street'\r\n                },\r\n                value : '',\r\n                validation : {\r\n                    required : true\r\n                },\r\n                valid : false,\r\n                touched : false\r\n            } ,\r\n            postalCode: {\r\n                elementType : 'input',\r\n                elementConfig : {\r\n                    type: 'text',\r\n                    placeholder : 'PostalCode'\r\n                },\r\n                value : '',\r\n                validation : {\r\n                    required : true,\r\n                    maxLength: 5,\r\n                    minLength: 5,\r\n                    isNumeric:true\r\n                },\r\n                valid : false,\r\n                touched : false\r\n            } ,\r\n            country: {\r\n                elementType : 'input',\r\n                elementConfig : {\r\n                    type: 'text',\r\n                    placeholder : 'Country'\r\n                },\r\n                value : '',\r\n                validation : {\r\n                    required : true\r\n                },\r\n                valid : false,\r\n                touched : false\r\n            }  ,\r\n            deliveryMethod: {\r\n                elementType : 'select',\r\n                elementConfig : {\r\n                    options : [\r\n                        {value : 'fastest', displayValue: 'Fastest'},\r\n                        {value : 'cheapest', displayValue: 'Cheapest'}\r\n                    ]\r\n                },\r\n                value : 'fastest',\r\n                valid : true\r\n            } \r\n        },\r\n      \r\n        isFormValid: false\r\n    }\r\n\r\n\r\n    orderHandler = (event) => {\r\n        event.preventDefault();\r\n               \r\n        const formData = {}\r\n        for (let formElementIdentifier in this.state.orderForm) {\r\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value\r\n        }\r\n         \r\n        const toPurchaseOrder = {\r\n            ingredients : this.props.ings,\r\n            price : this.props.price,\r\n            orderData: formData,\r\n            userId :this.props.userId\r\n        }\r\n        this.props.onOrderBurger( toPurchaseOrder, this.props.token);\r\n\r\n    }\r\n    \r\n    checkValidity = (value,rules) => {\r\n        let isValid = false\r\n    \r\n        // rules is null by selection\r\n        if (! rules)\r\n          return true\r\n        if (rules.required) {\r\n            isValid = value.trim() !== '';\r\n        }\r\n        if (rules.maxLength){\r\n            isValid = (value.trim().length <= rules.maxLength) && isValid\r\n        }\r\n        if (rules.minLength) {\r\n            isValid = (value.trim().length >= rules.minLength) && isValid\r\n        }\r\n        if(rules.isEmail) {\r\n            const patter = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n            isValid = patter.test(value) && isValid;\r\n        }\r\n        if(rules.isNumeric) {\r\n            const pattern = /^\\d+$/;\r\n            isValid = pattern.test(value) && isValid;\r\n        }\r\n             \r\n            return isValid;\r\n    }\r\n\r\n    inputChangeHandler = (event,identifier) => {\r\n        \r\n        const updatedOrderForm = {...this.state.orderForm}\r\n\r\n        const updatedFormElement = {\r\n                     ...updatedOrderForm[identifier]\r\n                  }\r\n\r\n        updatedFormElement.value = event.target.value;\r\n        //check if the value of formElement is valid or not, and store the result in the valid property\r\n        updatedFormElement.valid =  this.checkValidity(updatedFormElement.value,updatedFormElement.validation)\r\n        // true wehn we write something     \r\n        updatedFormElement.touched = true;\r\n        //Check the validation for the Form complete \r\n        updatedOrderForm[identifier] = updatedFormElement;\r\n\r\n        let isFormValid = true\r\n        for (let formElement in updatedOrderForm) {\r\n            isFormValid = updatedOrderForm[formElement].valid && isFormValid\r\n        }\r\n        this.setState({orderForm : updatedOrderForm,isFormValid : isFormValid })\r\n\r\n    }\r\n\r\n    render () {\r\n        let formElementsArray = []\r\n        for (let key in this.state.orderForm) {\r\n            formElementsArray.push({\r\n                config : this.state.orderForm[key],\r\n                id : key\r\n            });\r\n        }\r\n        let form = (\r\n            <form onSubmit = {this.orderHandler}>\r\n                {\r\n                   formElementsArray.map(formElement => {\r\n                         return  <Input key = {formElement.id}\r\n                                        elementType = {formElement.config.elementType}\r\n                                        elementConfig = {formElement.config.elementConfig}\r\n                                        value = {formElement.config.value}\r\n                                        changed = {(event) => this.inputChangeHandler(event,formElement.id)}\r\n                                        invalid = { !formElement.config.valid}\r\n                                        shouldValidate = {formElement.config.validation}\r\n                                        touched = {formElement.config.touched}/>\r\n                        }) \r\n                }\r\n                <Button disabled = {!this.state.isFormValid} btnType = 'Success' >ORDER</Button>\r\n            </form>\r\n       \r\n        );\r\n        if (this.props.loading) {\r\n            form = <Spinner/>\r\n        }\r\n        \r\n        return (\r\n            <div className = {classes.ContactData}>\r\n                <h4>Enter your Contact Data</h4>\r\n                {form}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings : state.burgerBuilder.ingredients,\r\n        price : state.burgerBuilder.totalPrice,\r\n        loading : state.order.loading,\r\n        token : state.auth.idToken,\r\n        userId : state.auth.userId\r\n    }\r\n}\r\nconst mapDispatchtoProps = dispatch => {\r\n    return {\r\n        onOrderBurger : (orderData, token) => dispatch(actions.tryPurchaseBurger(orderData, token))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchtoProps) (withErrorHandler (ContactData ,axios)) ;","import './Checkout.module.css';\r\nimport React, { Component } from 'react';\r\nimport {Route,Redirect} from 'react-router-dom';\r\nimport CheckoutSummery from '../../components/Order/CkeckoutSummery/CheckoutSummery';\r\nimport ContactData from '../../containers/Checkout/ContactData/ContactData';\r\nimport {connect} from 'react-redux';\r\nimport * as actions from \"../../store/actions/index\";\r\n\r\nclass Checkout extends Component {\r\n\r\n\r\n    componentWillUnmount() {\r\n        this.props.onCheckoutCancel();\r\n    }\r\n\r\n    checkoutCancelHandler = () => {\r\n        this.props.onCheckoutCancel();\r\n        this.props.history.goBack();\r\n       \r\n    }\r\n    checkoutContinueHandler = () => {\r\n        \r\n        \r\n        this.props.history.replace('/checkout/contact-data')\r\n    }\r\n\r\n   render () {\r\n       let summery = <Redirect to = \"/\"/>\r\n       if (this.props.ings) {\r\n           let checkoutRedirect = (!this.props.checkoutStart) ? <Redirect to = \"/\"/> : null\r\n           summery =          \r\n             <div>\r\n                 {checkoutRedirect}\r\n                <CheckoutSummery \r\n                        ingriedents = {this.props.ings}\r\n                        checkoutCancelled= {this.checkoutCancelHandler}\r\n                        checkoutContinued = {this.checkoutContinueHandler} />\r\n                <Route path = {this.props.match.path + '/contact-data'} \r\n                        component = {ContactData}/>\r\n             </div>\r\n       }\r\n       return summery;\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings : state.burgerBuilder.ingredients,\r\n        checkoutStart : state.order.checkoutStart\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onCheckoutCancel : () => dispatch(actions.checkoutCancel())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Checkout) ;","import classes from './Order.module.css'\r\nimport React from 'react'\r\n\r\nconst order = (props) => {\r\n    const ingredients = []\r\n    \r\n    for (let ingredientName in props.ingredients) {\r\n        ingredients.push({\r\n            name : ingredientName,\r\n            amount : props.ingredients[ingredientName]\r\n        });\r\n\r\n    }\r\n\r\n    const ingredientsOutput = ingredients.map(ig => {\r\n        return <span key = {ig.name} \r\n                     className = {classes.Ingredients} >{ig.name} : {ig.amount} </span>\r\n    })\r\n    console.log()\r\n    \r\n    return (\r\n        <div className = {classes.Order}>\r\n        <p>Ingredients : {ingredientsOutput} </p>\r\n            <p>Price : <strong>USD {props.price}</strong> </p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default order;","import classes from './Orders.module.css'\r\nimport React,{Component} from 'react'\r\nimport Order from '../../components/Order/Order'\r\nimport axios from '../../axios-orders'\r\nimport withErrorHandler from '../../hoc/withErrorHandler'\r\nimport Spinner from '../../components/UI/Spiner/Spinner'\r\nimport * as actions from '../../store/actions/index'\r\nimport { connect } from \"react-redux\";\r\nclass Orders extends Component {\r\n   \r\n    componentDidMount () {\r\n       this.props.onFetchOrders(this.props.token, this.props.userId)\r\n    }\r\n\r\n    render () {\r\n        let toShowOrders = <Spinner/>\r\n        if (!this.props.loading) {\r\n            toShowOrders =  this.props.orders.map(order => {\r\n                                return (<Order \r\n                                        key = {order.id}\r\n                                        ingredients = {order.ingredients}\r\n                                        price = {order.price} />);\r\n                            })\r\n        }\r\n        if(this.props.error) {\r\n            toShowOrders = <p>Some Thing is Error</p>\r\n        }\r\n\r\n        return (\r\n            <div className = {classes.Orders}>\r\n                {toShowOrders}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        orders : state.order.orders,\r\n        loading : state.order.loading,\r\n        error : state.order.error,\r\n        token : state.auth.idToken,\r\n        userId :state.auth.userId\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchOrders : (token, userId) => dispatch(actions.tryFetchOrders(token, userId))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(withErrorHandler(Orders,axios))  ;","export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","export default __webpack_public_path__ + \"static/media/burger-logo.ec69c7f6.png\";","import classes from './Logo.module.css'\r\nimport React from 'react'\r\nimport burgerLogo from '../../assets/Images/burger-logo.png'\r\n\r\nconst logo = (props) => {\r\n\r\n    return(\r\n     <div className = {classes.Logo}>\r\n         <img src = {burgerLogo} alt='MyBurger'/>\r\n     </div>\r\n    )\r\n}\r\nexport default logo;","import classes from './NavigationItem.module.css'\r\nimport React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nconst NavigationItem = (props) => (\r\n\r\n    <li className = {classes.NavigationItem}>\r\n    \r\n        <NavLink to = {props.Link}\r\n                activeClassName  = {classes.active}\r\n                exact = {props.genau}>{props.children}</NavLink>\r\n    </li>\r\n);\r\n\r\nexport default NavigationItem;","import classes from './NavigationItems.module.css'\r\nimport React from 'react'\r\nimport NavigationItem from './NavigationItem/NavigationItem'\r\nconst NavigationItems = (props) => (\r\n    \r\n    <ul className = {classes.NavigationItems}>\r\n            {/* we have used \"genau to mention to that, the Route \"/\" will be active just by Route and not by subRoute */}\r\n        <NavigationItem Link ='/' genau >Burger Builder</NavigationItem> \r\n        {\r\n            props.isAuth ?  <NavigationItem Link = '/logout'> Logout</NavigationItem> \r\n                         :  <NavigationItem Link = '/auth'>Authenticate</NavigationItem> \r\n        }\r\n       \r\n        {\r\n            props.checkoutBegin ?  <NavigationItem Link = '/checkout'>Checkout</NavigationItem> : null \r\n        }\r\n       \r\n        {\r\n            props.isAuth ?  <NavigationItem Link = '/orders'>Orders</NavigationItem> : null\r\n        }\r\n       \r\n        <NavigationItem Link = '/about'  >About</NavigationItem>   \r\n    </ul>\r\n);\r\n\r\nexport default NavigationItems;","import classes from './ToggleDrawer.module.css'\r\nimport React from 'react'\r\n\r\nconst toggleDrawer = (props) => {\r\n \r\n    return(\r\n        <div className = {classes.ToggleDrawer}\r\n            onClick = {props.click}>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default toggleDrawer","import classes from './Toolbar.module.css';\r\nimport React from 'react';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems'\r\nimport ToggleDrawer from './ToggleDrawer/ToggleDrawer'\r\n\r\n\r\nconst toolbar = (props) => {\r\n\r\n    return (\r\n        <header className = {classes.Toolbar}>\r\n          <ToggleDrawer click = {props.openSidedrawer} />\r\n          \r\n          <div className = {classes.Logo}>\r\n             <Logo/>\r\n          </div>\r\n          <nav className = {classes.DesktopOnly}>\r\n            <NavigationItems isAuth = {props.isAuthenticate}\r\n                              checkoutBegin = {props.checkoutStart} \r\n            />\r\n          </nav> \r\n        </header>\r\n    );\r\n}\r\n\r\nexport default toolbar;","import classes from './Sidedrawer.module.css'\r\nimport React from 'react'\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport Logo from '../../Logo/Logo';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop'\r\nimport Aux from '../../../hoc/Auxillary'\r\n\r\nconst sidedrawer = (props) => {\r\n    //...\r\n    return (\r\n        <Aux>\r\n            <Backdrop show = {props.showStatus}\r\n                       click = {props.closeSidedrawer}/>\r\n           <div className = {(props.showStatus)?[classes.Sidedrawer,classes.Open].join(' ')\r\n                                                :[classes.Sidedrawer,classes.Close].join(' ')}>\r\n           <div className = {classes.Logo}>\r\n              <Logo/>\r\n           </div>\r\n        \r\n         <nav>\r\n             <NavigationItems isAuth = {props.isAuthenticate}\r\n                              checkoutBegin = {props.checkoutStart}/>\r\n         </nav>\r\n       </div>\r\n        </Aux>\r\n       \r\n    )\r\n}\r\n\r\nexport default sidedrawer;","import React,{Component} from 'react';\r\nimport Aux from '../../hoc/Auxillary'\r\nimport classes from './Layout.module.css'\r\nimport Toolbar from '../Navigation/Toolbar/Toolbar'\r\nimport Sidedrawer from '../Navigation/Sidedrawer/Sidedrawer'\r\nimport {connect} from 'react-redux'\r\n\r\nclass Layout extends Component {\r\n    state = {\r\n        showStatus: false\r\n    }\r\n\r\n    componentDidUpdate () {\r\n        \r\n    }\r\n\r\n    toggleSidedrawerHandler = () => {\r\n        this.setState((prevState) => {\r\n            return ({\r\n                showStatus : !prevState.showStatus\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Aux>\r\n            <Toolbar openSidedrawer = {this.toggleSidedrawerHandler}\r\n                     isAuthenticate = {this.props.isAuth}\r\n                     checkoutStart = {this.props.checkoutStart}\r\n            />\r\n\r\n            <Sidedrawer\r\n                showStatus = {this.state.showStatus}\r\n                closeSidedrawer = {this.toggleSidedrawerHandler}\r\n                isAuthenticate = {this.props.isAuth}\r\n                checkoutStart = {this.props.checkoutStart}\r\n            />\r\n            \r\n            <main className = {classes.content}>\r\n                {this.props.children}\r\n            </main>\r\n            </Aux>        \r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isAuth : state.auth.idToken !== null ,\r\n        checkoutStart: state.order.checkoutStart\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps) (Layout);","import React from 'react';\r\nimport classes from './BuildControl.module.css'\r\n\r\nconst buildControl = (props) => {\r\n\r\n    return (\r\n        <div className = {classes.BuildControl}>\r\n            <div className = {classes.Label}>{props.ingredLabel}</div>\r\n            <button className = {classes.Less}\r\n             onClick = {(event) => props.removeIngredient(props.ingredLabel,event)}\r\n             disabled = {props.isDisabled}\r\n             >Less</button>\r\n            <button className = {classes.More} \r\n            onClick = {(event) => props.addIngredient(props.ingredLabel,event)}>More</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default buildControl;","import React from 'react';\r\n\r\nconst price = (props) => {\r\n\r\n    return (\r\n        <p>Price : <strong>{props.price.toFixed(2)} £ </strong></p>\r\n    );\r\n}\r\n\r\nexport default price;","import React from 'react';\r\nimport classes from './BuildControls.module.css'\r\nimport BuildControl from './BuildControl/BuildControl';\r\nimport Price from './Price/Price'\r\n\r\n\r\nconst buildcontrols = (props) => {\r\n    const  ingredients = Object.keys(props.ingredients);\r\n    // let    controlsBuffer = []\r\n    \r\n    // for (let i = 0; i < ingredients.length; i++){\r\n    //     controlsBuffer.push(\r\n    //         <BuildControl \r\n    //         key = {ingredients[i] + i} \r\n    //         ingredLabel = {ingredients[i]} />\r\n    //     );\r\n    // }\r\n\r\n    return (\r\n        <div className = {classes.BuildConrols}>\r\n            <Price price = {props.price}/>\r\n         {\r\n         //controlsBuffer\r\n          ingredients.map((ingredient,index) => {\r\n              return <BuildControl \r\n                     key = {ingredient + index}\r\n                     ingredLabel = {ingredient}\r\n                     removeIngredient = {props.removeIngredient}\r\n                     addIngredient={props.addIngredient}\r\n                     isDisabled = {props.disabledInfo[ingredient]}\r\n                      />\r\n          })\r\n         }\r\n         <button className = {classes.OrderButton} \r\n         disabled = {!props.hasOrder}\r\n         onClick = {props.ordered}\r\n         >{props.isAuth ? 'ORDER NOW' : 'SIGN-UP TO ORDER'}</button>\r\n         </div>\r\n    );\r\n    \r\n\r\n}\r\n\r\n\r\nexport default buildcontrols;","import React from 'react';\r\nimport classes from './OrderSummery.module.css';\r\nimport Aux from '../../../hoc/Auxillary';\r\nimport Button from '../../UI/Button/Button'\r\nimport Price from '../BuildControls/Price/Price'\r\n\r\nconst orderSummery = (props) => {\r\n    const orderedIngredients = Object.keys(props.ingredients).map((ingredient) =>{\r\n    return ( <li key = {ingredient}>\r\n                <span style = {{ textTransform: 'capitalize'}}>{ingredient}</span> : {props.ingredients[ingredient]}\r\n            </li>)\r\n    })\r\n    return (\r\n        <Aux>\r\n            <h3>Your Order</h3>\r\n            <p>A delicios Burger with the folowing ingredients : </p>\r\n            <ul>\r\n             {orderedIngredients}\r\n            </ul>\r\n            <Price price = {props.price}/>\r\n            <p>Continue to Checkout</p>\r\n            <Button\r\n                 btnType = {'Danger'}\r\n                 clicked= {props.cancelled}\r\n            >Cancel</Button>\r\n            \r\n            <Button\r\n               btnType = {'Success'}\r\n               clicked = {props.purchased}\r\n            >Continue</Button>\r\n        </Aux>\r\n      \r\n    )\r\n}\r\n\r\nexport default orderSummery;","\r\nimport React,{Component} from 'react'\r\nimport Aux from '../../hoc/Auxillary'\r\nimport Burger from '../../components/Burger/Burger'\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls'\r\nimport Modal from '../../components/UI/Modal/Modal'\r\nimport OrderSummery from '../../components/Burger/OrderSummery/OrderSummery'\r\nimport axios from '../../axios-orders'\r\nimport Spinner from '../../components/UI/Spiner/Spinner'\r\nimport withErrorHandler from '../../hoc/withErrorHandler';\r\nimport {connect} from 'react-redux'\r\nimport * as actions from '../../store/actions/index'\r\n\r\n\r\n\r\nexport class BurgerBuilder extends Component {\r\n\r\n    state = {\r\n           purchased : false,\r\n           orderConfirmed: false,\r\n    }\r\n    componentDidMount () {\r\n     this.props.onInitIngredients();\r\n    }\r\n\r\n    updateHasOrderStatus = () => {\r\n        let ingredients = this.props.ings\r\n        let sum = 0;\r\n\r\n        // Maximillain method\r\n        // let ingredientsArr = Object.keys(ingredients);\r\n        //   sum =  ingredientsArr.map((ingred) => {\r\n        //         return ingredients[ingred]\r\n        //     }).reduce((sum, currentValue) =>{\r\n        //           return sum + currentValue\r\n        //     })\r\n\r\n        for( let ingred in ingredients) {\r\n            sum = sum + ingredients[ingred];\r\n        }\r\n                \r\n        return sum > 0\r\n    }\r\n\r\n     \r\n     purchasedHandler = () =>{\r\n         if (this.props.isAuthenticated) {\r\n            this.setState({\r\n                purchased : true   \r\n               })\r\n         } \r\n         else {\r\n            this.props.history.push('/auth')\r\n         }\r\n         \r\n        \r\n     }\r\n\r\n     purchaseCancelHandler = () => {\r\n        \r\n         this.setState({\r\n            purchased : false\r\n         })\r\n     }    \r\n\r\n     purchaseContinueHandler = () => {\r\n        this.props.onCheckoutStart();\r\n        this.props.history.push('/checkout');\r\n\r\n      }\r\n\r\n    render() {\r\n        const disabledInfo = {...this.props.ings}\r\n\r\n        for (let key in disabledInfo) {\r\n            disabledInfo[key]= disabledInfo[key] <= 0;\r\n        }\r\n        \r\n        let loadedBurger = (this.props.error)? <p>Some Thing is Error</p> :<Spinner/> \r\n        let  orderSummery = null;\r\n        if (this.props.ings) {\r\n            loadedBurger =  \r\n            <Aux>\r\n                <Burger \r\n                ingriedents = {this.props.ings}\r\n                />\r\n                <BuildControls ingredients = {this.props.ings}\r\n                            addIngredient = {this.props.onIngredientAdded}\r\n                            removeIngredient= {this.props.onIngredientRemoved}\r\n                            disabledInfo = {disabledInfo}\r\n                            price = {this.props.price}\r\n                            hasOrder = {this.updateHasOrderStatus()}\r\n                            ordered = {this.purchasedHandler} \r\n                            isAuth = {this.props.isAuthenticated}\r\n                />\r\n            </Aux>  \r\n            orderSummery =  <OrderSummery ingredients = {this.props.ings}\r\n            cancelled = {this.purchaseCancelHandler}\r\n            purchased = {this.purchaseContinueHandler}\r\n            price = {this.props.price}\r\n            />\r\n        }\r\n        if (this.state.orderConfirmed ){\r\n            orderSummery= <Spinner/>\r\n        }\r\n        \r\n        return (\r\n        <Aux>\r\n            <div>Burger Graphic </div>\r\n            <Modal show = {this.state.purchased }\r\n                showCancel = {this.purchaseCancelHandler}>\r\n                    \r\n                    {orderSummery}\r\n            </Modal>\r\n            {loadedBurger}\r\n        </Aux>\r\n        );\r\n\r\n     }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings : state.burgerBuilder.ingredients,\r\n        price : state.burgerBuilder.totalPrice,\r\n        error : state.burgerBuilder.error,\r\n        isAuthenticated : state.auth.idToken !== null\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onIngredientAdded : (ingName) => dispatch(actions.addIngredient(ingName)),\r\n        onIngredientRemoved : (ingName) => dispatch(actions.removeIngredient(ingName)),\r\n        onInitIngredients : () => dispatch(actions.initIngredients()),\r\n        onCheckoutStart : () => dispatch(actions.checkoutStart())\r\n        \r\n     }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(withErrorHandler(BurgerBuilder,axios));","import React, { Component } from \"react\";\r\nimport classes from './About.module.css'\r\n\r\nclass About extends Component {\r\n\r\n    render () {\r\n        return (\r\n            <div className = {classes.About}>\r\n                <h1>Welcome To Our Application!!!</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default About","import logo from './logo.svg';\r\nimport './App.css';\r\nimport Layout from './components/Layout/Layout';\r\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\r\nimport Checkout from './containers/Checkout/Checkout';\r\nimport Orders from './containers/Orders/Orders';\r\nimport Auth from './containers/Auth/auth'\r\nimport Logout from './containers/Auth/Logout/Logout'\r\nimport About from './containers/About/About'\r\nimport {Route,Router,Switch,Redirect} from 'react-router-dom';\r\nimport * as actions from './store/actions/index'\r\nimport {connect} from 'react-redux'\r\nimport { Component,lazy,Suspense } from 'react';\r\n\r\nconst asyncCheckout = lazy(() => import('./containers/Checkout/Checkout'))\r\nconst asyncOrders = lazy(() => import('././containers/Orders/Orders'))\r\nconst asyncAuth = lazy(() => import('./containers/Auth/auth'))\r\n\r\n\r\nclass App extends Component {\r\n \r\n  componentDidMount () {\r\n    this.props.onAuthCheck();\r\n  }\r\n    render () {\r\n      let gaurdRoute = (\r\n            <Switch>\r\n                <Route path = '/auth' component = {Auth}/>\r\n                <Route path = '/about' component = {About}/>\r\n                <Route path = '/' component = {BurgerBuilder}/>\r\n                <Redirect to = \"/\" />\r\n            </Switch>\r\n      )\r\n      if (this.props.isAuth) {\r\n        gaurdRoute = (\r\n            <Switch>\r\n                <Route path = '/orders' component = {Orders}/>\r\n                <Route path = '/checkout' component = {Checkout}/>\r\n                <Route path = '/auth' component = {Auth}/>\r\n                <Route path = '/logout' component = {Logout}/>\r\n                <Route path = '/about' component = {About}/>\r\n                <Route path = '/' component = {BurgerBuilder}/>\r\n                <Redirect to = \"/\" />\r\n            </Switch>\r\n        )\r\n      }\r\n      return (\r\n        <div>\r\n           <Layout>\r\n             {gaurdRoute}\r\n          </Layout> \r\n        </div>\r\n      ); \r\n  }\r\n    \r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isAuth: state.auth.idToken !== null\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onAuthCheck : () => dispatch(actions.checkAuthLStorage())\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps) (App);\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\r\nimport * as actionTypes from '../actions/actionTypes'\r\nconst initialState = {\r\n    ingredients : null,\r\n    totalPrice: 4,\r\n    error: false\r\n}\r\nconst INGREDIENTS_PRICES = {\r\n    salad:0.7,\r\n    cheese:0.8,\r\n    meat:1.3,\r\n    bacon : 0.9\r\n}\r\nconst addIngredient = (state,action) => {\r\n    return {\r\n        ...state,\r\n        ingredients : {\r\n            ...state.ingredients,\r\n            [action.ingredientName] : state.ingredients[action.ingredientName] +1\r\n        },\r\n        totalPrice : state.totalPrice + INGREDIENTS_PRICES[action.ingredientName]\r\n    }\r\n}\r\nconst removeIngredient = (state,action) => {\r\n    return {\r\n        ...state,\r\n        ingredients : {\r\n            ...state.ingredients,\r\n            [action.ingredientName] : state.ingredients[action.ingredientName] -1\r\n        },\r\n        totalPrice : state.totalPrice - INGREDIENTS_PRICES[action.ingredientName]\r\n\r\n    }  \r\n}\r\nconst initIngredients = (state,action) => {\r\n    if (!action.ingredients) {\r\n        return {\r\n            ...state,\r\n            ingredients: null\r\n        }\r\n    }\r\n    return {\r\n        ...state,\r\n        ingredients : {\r\n            salad : action.ingredients.salad,\r\n            bacon : action.ingredients.bacon,\r\n            cheese : action.ingredients.cheese,\r\n            meat : action.ingredients.meat\r\n        },\r\n        totalPrice: 4,\r\n        error : false\r\n    }\r\n}\r\nconst fetchIngredientsFail = (state,action) => {\r\n    return {\r\n        ...state,\r\n        error : true\r\n    }\r\n}\r\nconst reducer = (state = initialState, action) => {\r\n    \r\n    switch (action.type ) {\r\n        case actionTypes.ADD_INGREDIENT:\r\n            return addIngredient(state,action)\r\n\r\n        case actionTypes.REMOVE_INGREDIENT :\r\n            return removeIngredient(state,action);\r\n\r\n        case actionTypes.INIT_INGREDIENTS :\r\n           return initIngredients(state,action);\r\n        \r\n        case actionTypes.FETCH_INGREDIENTS_FAILD :\r\n           return fetchIngredientsFail(state,action);\r\n    \r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;\r\n","import * as actionTypes from '../actions/actionTypes'\r\nconst initialState = {\r\n    orders : [],\r\n    loading:false,\r\n    checkoutStart: false,\r\n    error : false\r\n}\r\n\r\nconst reducer = (state = initialState,action) => {\r\n    switch (action.type) {\r\n        // Start  Actions for Purchasing The Burger\r\n        case actionTypes.PURCHASE_BURGER_START :\r\n            return {\r\n                ...state,\r\n                loading:true,\r\n                error : false\r\n            }\r\n\r\n        case actionTypes.PURCHASE_BURGER_SUCCESS:\r\n            const newOrder = {\r\n                ...action.orderData,\r\n                id:action.orderId\r\n            }\r\n            return {\r\n                ...state,\r\n                loading : false,\r\n                checkoutStart: false,\r\n                orders :state.orders.concat(newOrder)\r\n            }\r\n        case actionTypes.FETCH_INGREDIENTS_FAILD :\r\n            return{\r\n                ...state,\r\n                loading:false,\r\n                error:true\r\n            }   \r\n        // Actoin for Storing the Status of Checkoutstart, That helps by Redirecting to Home Page after PurchaseSuccess\r\n        case actionTypes.CHECKOUT_START :\r\n            return {\r\n                ...state,\r\n                checkoutStart: true,\r\n                loading: false\r\n            }\r\n        case actionTypes.CHECKOUT_CANCEL :\r\n            return {\r\n                ...state,\r\n                checkoutStart: false,\r\n                loading : false\r\n            }\r\n\r\n        // End Actions for Purchasing The Burger\r\n\r\n        // Start Actions for Fetching The Orders\r\n        case actionTypes.FETCH_ORDERS_START :\r\n            return {\r\n                ...state,\r\n                loading:true,\r\n                error: false\r\n            }\r\n\r\n        case actionTypes.FETCH_ORDERS_SUCCESS :\r\n            return {\r\n                ...state,\r\n                orders : action.orders,\r\n                loading: false\r\n            }\r\n        case actionTypes.FETCH_ORDERS_FAIL :\r\n            return {\r\n                ...state,\r\n                error: true\r\n            }\r\n        // Start Actions for Fetching The Orders\r\n    \r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    idToken: null,\r\n    userId : null,\r\n    error : null,\r\n    loading : false\r\n}\r\n\r\nconst authStart = (state,action) => {\r\n    return {\r\n        ...state,\r\n        loading: true,\r\n        error:null\r\n    }\r\n}\r\nconst authSuccess = (state,action) => {\r\n    return {\r\n        ...state,\r\n        idToken: action.idToken,\r\n        userId : action.userId,\r\n        loading: false,\r\n        error : null\r\n        \r\n    }\r\n}\r\nconst authFail = (state,action) => {\r\n    return {\r\n        ...state,\r\n        error: action.error,\r\n        loading: false\r\n    }\r\n}\r\nconst logout = (state,action) => {\r\n    return {\r\n        ...state,\r\n        idToken:null,\r\n        userId: null\r\n    }\r\n}\r\n\r\nconst reducer = (state = initialState,action) => {\r\n\r\n    switch (action.type) {\r\n        case actionTypes.AUTH_START:\r\n           return authStart(state,action);\r\n\r\n        case actionTypes.AUTH_SUCCESS :\r\n            return authSuccess(state, action);\r\n\r\n        case actionTypes.AUTH_FAIL :\r\n            return authFail(state,action);\r\n        \r\n        case actionTypes.LOGOUT :\r\n            return logout(state,action);\r\n            \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default reducer ;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport {Provider} from 'react-redux';\r\nimport {createStore,applyMiddleware,compose,combineReducers} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport burgerBuilderReducer from './store/reducers/burgerBuilder'\r\nimport orderReducer from './store/reducers/order'\r\nimport authReducer from './store/reducers/auth'\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst rootReducer = combineReducers({\r\n    burgerBuilder : burgerBuilderReducer,\r\n    order : orderReducer,\r\n    auth : authReducer\r\n})\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store = {store}>\r\n      <React.StrictMode>\r\n            <BrowserRouter>\r\n              <App />\r\n            </BrowserRouter>\r\n      </React.StrictMode>\r\n  </Provider>\r\n ,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}